{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Documents\\\\Programming\\\\Chenzo.tv\\\\frontend\\\\chenzo.tv\\\\src\\\\components\\\\Poll\\\\PollResults.tsx\",\n    _s = $RefreshSig$();\n\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollResults(_ref) {\n  _s();\n\n  let {\n    pollID\n  } = _ref;\n  let [title, setTitle] = useState('');\n  let [options, setOptions] = useState(['']);\n  let [results, setResults] = useState([{}]);\n  let [isLoading, setLoadingStatus] = useState(true);\n  useEffect(() => {\n    onSnapshot(collection(db, 'polls'), snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.id === pollID) {\n          const data = doc.data();\n          let totalVotes = data.optionACount + data.optionBCount + data.optionCCount + data.optionDCount;\n          let votePercentageACalc = data.optionACount / totalVotes * 100;\n          let votePercentageBCalc = data.optionBCount / totalVotes * 100;\n          let votePercentageCCalc = data.optionCCount / totalVotes * 100;\n          let votePercentageDCalc = data.optionDCount / totalVotes * 100;\n          const results = [{\n            \"name\": data.options[0],\n            \"value\": votePercentageACalc\n          }, {\n            \"name\": data.options[1],\n            \"value\": votePercentageBCalc\n          }, {\n            \"name\": data.options[2],\n            \"value\": votePercentageCCalc\n          }, {\n            \"name\": data.options[3],\n            \"value\": votePercentageDCalc\n          }];\n          setTitle(data.title);\n          setOptions(data.options);\n          setResults(results);\n          setTimeout(() => {\n            setLoadingStatus(false);\n          }, 1200);\n        }\n      });\n    });\n  }, [results]);\n  const RADIAN = Math.PI / 180;\n\n  const renderCustomizedLabel = _ref2 => {\n    let {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      percent,\n      index\n    } = _ref2;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: x > cx ? 'start' : 'end',\n      dominantBaseline: \"central\",\n      children: `${(percent * 100).toFixed(0)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: results,\n            cx: \"50%\",\n            cy: \"50%\",\n            labelLine: false,\n            label: renderCustomizedLabel,\n            outerRadius: 80,\n            fill: \"#8884d8\",\n            dataKey: \"value\",\n            children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PollResults, \"akKyB+72iWvnwjCd9OTc3f4Fmr0=\");\n\n_c = PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["C:/Users/Elias/Documents/Programming/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx"],"names":["collection","onSnapshot","PieChart","Pie","Cell","ResponsiveContainer","db","React","useEffect","useState","PollResults","pollID","title","setTitle","options","setOptions","results","setResults","isLoading","setLoadingStatus","snapshot","docs","map","doc","id","data","totalVotes","optionACount","optionBCount","optionCCount","optionDCount","votePercentageACalc","votePercentageBCalc","votePercentageCCalc","votePercentageDCalc","setTimeout","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","entry","COLORS","length"],"mappings":"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","sourcesContent":["import { collection, onSnapshot } from \"firebase/firestore\";\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\r\nimport db from \"../../firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './PollResults.css';\r\n\r\n\r\n\r\nexport default function PollResults({ pollID }) {\r\n\r\n    let [title, setTitle] = useState('');\r\n    let [options, setOptions] = useState(['']);\r\n    let [results, setResults] = useState([{}]);\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n\r\n    useEffect(() => {\r\n        onSnapshot(collection(db, 'polls'), (snapshot) => {\r\n            snapshot.docs.map((doc) => {\r\n                if(doc.id === pollID) {\r\n                    const data = doc.data();\r\n                    let totalVotes = data.optionACount + data.optionBCount + data.optionCCount + data.optionDCount;\r\n                    let votePercentageACalc = data.optionACount / totalVotes * 100;\r\n                    let votePercentageBCalc = data.optionBCount / totalVotes * 100;\r\n                    let votePercentageCCalc = data.optionCCount / totalVotes * 100;\r\n                    let votePercentageDCalc = data.optionDCount / totalVotes * 100;\r\n                    const results = [\r\n                        {\r\n                            \"name\": data.options[0],\r\n                            \"value\": votePercentageACalc,\r\n                        },\r\n                        {\r\n                            \"name\": data.options[1],\r\n                            \"value\": votePercentageBCalc,\r\n                        },\r\n                        {\r\n                            \"name\": data.options[2],\r\n                            \"value\": votePercentageCCalc,\r\n                        },\r\n                        {\r\n                            \"name\": data.options[3],\r\n                            \"value\": votePercentageDCalc,\r\n                        },\r\n                    ]\r\n                    setTitle(data.title);\r\n                    setOptions(data.options);\r\n                    setResults(results);\r\n                    setTimeout(() => { setLoadingStatus(false); }, 1200);\r\n                }\r\n            })\r\n        })\r\n    }, [results]);\r\n\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n      \r\n        return (\r\n          <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n          </text>\r\n        );\r\n      };\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <PieChart width={400} height={400}>\r\n                            <Pie data={results} cx=\"50%\" cy=\"50%\" labelLine={false} label={renderCustomizedLabel}\r\n                                outerRadius={80} fill=\"#8884d8\" dataKey=\"value\">\r\n                                {data.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))}\r\n                            </Pie>\r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            ) : (\r\n                <h1>Loading!</h1>\r\n            )}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}