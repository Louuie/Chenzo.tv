{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Documents\\\\Programming\\\\Chenzo.tv\\\\frontend\\\\chenzo.tv\\\\src\\\\components\\\\Poll\\\\Poll.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport db from \"../../firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Poll() {\n  _s();\n\n  let params = useParams();\n  let [optionOneCount, setOptionOneCount] = useState(0);\n  let [optionTwoCount, setOptionTwoCount] = useState(0);\n  let [optionThreeCount, setOptionThreeCount] = useState(0);\n  let [optionFourCount, setOptionFourCount] = useState(0);\n\n  const onVote = async () => {\n    try {} catch (e) {\n      console.log(\"Error adding document: \", e);\n    }\n  };\n\n  useEffect(() => {\n    // let totalVotes = optionOneCount + optionTwoCount + optionThreeCount + optionFourCount;\n    // let votePercentageA = optionOneCount / totalVotes * 100;\n    // let votePercentageB = optionTwoCount / totalVotes * 100;\n    // let votePercentageC = optionThreeCount / totalVotes * 100;\n    // let votePercentageD = optionFourCount / totalVotes * 100;\n    // console.log(`${votePercentageA}% voted for Chenzo`);\n    // console.log(`${votePercentageB}% voted for Marky`);\n    // console.log(`${votePercentageC}% voted for Flax`);\n    // console.log(`${votePercentageD}% voted for Ally`);\n    const getPollData = async () => {\n      const pollData = await getDocs(collection(db, 'polls'));\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"ghB7Q1xEnXEjxoLDcz/NSODRldc=\", false, function () {\n  return [useParams];\n});\n\n_c = Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["C:/Users/Elias/Documents/Programming/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/Poll.tsx"],"names":["useEffect","useState","useParams","collection","getDocs","db","Poll","params","optionOneCount","setOptionOneCount","optionTwoCount","setOptionTwoCount","optionThreeCount","setOptionThreeCount","optionFourCount","setOptionFourCount","onVote","e","console","log","getPollData","pollData","title","options"],"mappings":";;;AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,EAA0BC,OAA1B,QAAoD,oBAApD;AACA,OAAOC,EAAP,MAAe,0BAAf;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,MAAIC,MAAM,GAAGL,SAAS,EAAtB;AACA,MAAI,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAAlD;AACA,MAAI,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,CAAD,CAAlD;AACA,MAAI,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,CAAD,CAAtD;AACA,MAAI,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,CAAD,CAApD;;AAEA,QAAMe,MAAM,GAAG,YAAY;AACvB,QAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,CAAvC;AAA2C;AAC5D,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMoB,WAAW,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMjB,OAAO,CAACD,UAAU,CAACE,EAAD,EAAK,OAAL,CAAX,CAA9B;AACH,KAFD;AAGH,GAdQ,CAAT;AAgBA,sBACI;AAAA,4BACI;AAAA,gBAAKiB;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEN,MAAjB;AAAA,gBAA0BO,OAAO,CAAC,CAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAEkD;AAAA;AAAA;AAAA;AAAA,YAFlD,eAGI;AAAQ,MAAA,OAAO,EAAEP,MAAjB;AAAA,gBAA0BO,OAAO,CAAC,CAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAGkD;AAAA;AAAA;AAAA;AAAA,YAHlD,eAII;AAAQ,MAAA,OAAO,EAAEP,MAAjB;AAAA,gBAA0BO,OAAO,CAAC,CAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAIkD;AAAA;AAAA;AAAA;AAAA,YAJlD,eAKI;AAAQ,MAAA,OAAO,EAAEP,MAAjB;AAAA,gBAA0BO,OAAO,CAAC,CAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YALJ,eAKkD;AAAA;AAAA;AAAA;AAAA,YALlD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAtCuBjB,I;UAEPJ,S;;;KAFOI,I","sourcesContent":["import react, { useEffect, useState, } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { collection, doc, getDocs, updateDoc } from \"firebase/firestore\";\r\nimport db from \"../../firebase/firestore\";\r\n\r\nexport default function Poll() {\r\n    \r\n    let params = useParams();\r\n    let [optionOneCount, setOptionOneCount] = useState(0);\r\n    let [optionTwoCount, setOptionTwoCount] = useState(0);\r\n    let [optionThreeCount, setOptionThreeCount] = useState(0);\r\n    let [optionFourCount, setOptionFourCount] = useState(0);\r\n\r\n    const onVote = async () => {\r\n        try {\r\n        } catch (e) { console.log(\"Error adding document: \", e) }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // let totalVotes = optionOneCount + optionTwoCount + optionThreeCount + optionFourCount;\r\n        // let votePercentageA = optionOneCount / totalVotes * 100;\r\n        // let votePercentageB = optionTwoCount / totalVotes * 100;\r\n        // let votePercentageC = optionThreeCount / totalVotes * 100;\r\n        // let votePercentageD = optionFourCount / totalVotes * 100;\r\n        // console.log(`${votePercentageA}% voted for Chenzo`);\r\n        // console.log(`${votePercentageB}% voted for Marky`);\r\n        // console.log(`${votePercentageC}% voted for Flax`);\r\n        // console.log(`${votePercentageD}% voted for Ally`);\r\n\r\n        const getPollData = async () => {\r\n            const pollData = await getDocs(collection(db, 'polls', ))\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <button onClick={onVote}>{options[0]}</button><br></br>\r\n            <button onClick={onVote}>{options[1]}</button><br></br>\r\n            <button onClick={onVote}>{options[2]}</button><br></br>\r\n            <button onClick={onVote}>{options[3]}</button><br></br>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}