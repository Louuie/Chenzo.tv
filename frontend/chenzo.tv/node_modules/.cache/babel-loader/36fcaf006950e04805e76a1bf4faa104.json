{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Documents\\\\Programming\\\\Chenzo.tv\\\\frontend\\\\chenzo.tv\\\\src\\\\components\\\\Poll\\\\Poll.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport db from \"../../firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePoll(_ref) {\n  _s();\n\n  let {\n    title,\n    options\n  } = _ref;\n  let [optionOneCount, setOptionOneCount] = useState(0);\n  let [optionTwoCount, setOptionTwoCount] = useState(0);\n  let [optionThreeCount, setOptionThreeCount] = useState(0);\n  let [optionFourCount, setOptionFourCount] = useState(0);\n\n  const onVote = async () => {\n    try {\n      const docRef = await addDoc(collection(db, \"polls\"), {\n        title: title,\n        options: options,\n        optionACount: optionOneCount,\n        optionBCount: optionTwoCount,\n        optionCCount: optionThreeCount,\n        optionDCount: optionFourCount\n      });\n      console.log('Document written with ID:', docRef.id);\n    } catch (e) {\n      console.log(\"Error adding document: \", e);\n    }\n  };\n\n  useEffect(() => {\n    let totalVotes = optionOneCount + optionTwoCount + optionThreeCount + optionFourCount;\n    let votePercentageA = optionOneCount / totalVotes * 100;\n    let votePercentageB = optionTwoCount / totalVotes * 100;\n    let votePercentageC = optionThreeCount / totalVotes * 100;\n    let votePercentageD = optionFourCount / totalVotes * 100;\n    console.log(`${votePercentageA}% voted for Chenzo`);\n    console.log(`${votePercentageB}% voted for Marky`);\n    console.log(`${votePercentageC}% voted for Flax`);\n    console.log(`${votePercentageD}% voted for Ally`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onVote,\n      children: options[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePoll, \"71OLs+nIgLw27H5t/0okOFJ2wyM=\");\n\n_c = CreatePoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoll\");","map":{"version":3,"sources":["C:/Users/Elias/Documents/Programming/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/Poll.tsx"],"names":["useEffect","useState","collection","addDoc","db","CreatePoll","title","options","optionOneCount","setOptionOneCount","optionTwoCount","setOptionTwoCount","optionThreeCount","setOptionThreeCount","optionFourCount","setOptionFourCount","onVote","docRef","optionACount","optionBCount","optionCCount","optionDCount","console","log","id","e","totalVotes","votePercentageA","votePercentageB","votePercentageC","votePercentageD"],"mappings":"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","sourcesContent":["import react, { useEffect, useState } from \"react\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport db from \"../../firebase/firestore\";\r\n\r\nexport default function CreatePoll({title, options}) {\r\n\r\n    let [optionOneCount, setOptionOneCount] = useState(0);\r\n    let [optionTwoCount, setOptionTwoCount] = useState(0);\r\n    let [optionThreeCount, setOptionThreeCount] = useState(0);\r\n    let [optionFourCount, setOptionFourCount] = useState(0);\r\n\r\n    const onVote = async () => {\r\n        try {\r\n            const docRef = await addDoc(collection(db, \"polls\"), {\r\n                title: title,\r\n                options: options,\r\n                optionACount: optionOneCount,\r\n                optionBCount: optionTwoCount,\r\n                optionCCount: optionThreeCount,\r\n                optionDCount: optionFourCount\r\n            });\r\n            console.log('Document written with ID:', docRef.id);\r\n        } catch (e) { console.log(\"Error adding document: \", e) }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let totalVotes = optionOneCount + optionTwoCount + optionThreeCount + optionFourCount;\r\n        let votePercentageA = optionOneCount / totalVotes * 100;\r\n        let votePercentageB = optionTwoCount / totalVotes * 100;\r\n        let votePercentageC = optionThreeCount / totalVotes * 100;\r\n        let votePercentageD = optionFourCount / totalVotes * 100;\r\n        console.log(`${votePercentageA}% voted for Chenzo`);\r\n        console.log(`${votePercentageB}% voted for Marky`);\r\n        console.log(`${votePercentageC}% voted for Flax`);\r\n        console.log(`${votePercentageD}% voted for Ally`);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <button onClick={onVote}>{options[0]}</button><br></br>\r\n            <button onClick={onVote}>{options[1]}</button><br></br>\r\n            <button onClick={onVote}>{options[2]}</button><br></br>\r\n            <button onClick={onVote}>{options[3]}</button><br></br>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}