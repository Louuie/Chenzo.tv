{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/Poll.tsx\",\n    _s = $RefreshSig$();\n\nimport { Suspense, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, doc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport db from \"../../firebase/firestore\";\nimport PollResults from \"./PollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Poll() {\n  _s();\n\n  let params = useParams();\n  let [title, setTitle] = useState('');\n  let [votingStatus, setVotingStatus] = useState(false);\n  let [pollingID, setPollingID] = useState('');\n  let [options, setOptions] = useState([]);\n  let [optionOneCount, setOptionOneCount] = useState(0);\n  let [optionTwoCount, setOptionTwoCount] = useState(0);\n  let [optionThreeCount, setOptionThreeCount] = useState(0);\n  let [optionFourCount, setOptionFourCount] = useState(0);\n\n  const onOption1 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionACount: optionOneCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onOption2 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionBCount: optionTwoCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onOption3 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionCCount: optionThreeCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onOption4 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionDCount: optionFourCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    // let totalVotes = optionOneCount + optionTwoCount + optionThreeCount + optionFourCount;\n    // let votePercentageA = optionOneCount / totalVotes * 100;\n    // let votePercentageB = optionTwoCount / totalVotes * 100;\n    // let votePercentageC = optionThreeCount / totalVotes * 100;\n    // let votePercentageD = optionFourCount / totalVotes * 100;\n    // console.log(`${votePercentageA}% voted for Chenzo`);\n    // console.log(`${votePercentageB}% voted for Marky`);\n    // console.log(`${votePercentageC}% voted for Flax`);\n    // console.log(`${votePercentageD}% voted for Ally`);\n    onSnapshot(collection(db, \"polls\"), snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.id === params.id) {\n          const data = doc.data();\n          setTitle(data.title);\n          setOptions(data.options);\n          setPollingID(doc.id);\n          setOptionOneCount(data.optionACount);\n          setOptionTwoCount(data.optionBCount);\n          setOptionThreeCount(data.optionCCount);\n          setOptionFourCount(data.optionDCount);\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !votingStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onOption1,\n          children: options[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onOption2,\n          children: options[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onOption3,\n          children: options[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onOption4,\n          children: options[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(PollResults, {\n        pollID: pollingID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"oYBAh3V2M+qn5V4GkrwMzSYq0Lg=\", false, function () {\n  return [useParams];\n});\n\n_c = Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/Poll.tsx"],"names":["Suspense","useEffect","useState","useParams","collection","doc","onSnapshot","updateDoc","db","PollResults","Poll","params","title","setTitle","votingStatus","setVotingStatus","pollingID","setPollingID","options","setOptions","optionOneCount","setOptionOneCount","optionTwoCount","setOptionTwoCount","optionThreeCount","setOptionThreeCount","optionFourCount","setOptionFourCount","onOption1","pollRef","optionACount","console","log","id","e","onOption2","optionBCount","onOption3","optionCCount","onOption4","optionDCount","snapshot","docs","map","data"],"mappings":"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","sourcesContent":["import react, { Suspense, useEffect, useState, } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, doc, getDoc, getDocs, onSnapshot, setDoc, updateDoc } from \"firebase/firestore\";\nimport db from \"../../firebase/firestore\";\nimport PollResults from \"./PollResults\";\n\nexport default function Poll() {\n    \n    let params = useParams();\n    let [title, setTitle] = useState('');\n    let [votingStatus, setVotingStatus] = useState(false);\n    let [pollingID, setPollingID] = useState('');\n    let [options, setOptions] = useState([]);\n    let [optionOneCount, setOptionOneCount] = useState(0);\n    let [optionTwoCount, setOptionTwoCount] = useState(0);\n    let [optionThreeCount, setOptionThreeCount] = useState(0);\n    let [optionFourCount, setOptionFourCount] = useState(0);\n\n    const onOption1 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionACount: optionOneCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    \n    const onOption2 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionBCount: optionTwoCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    \n    const onOption3 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionCCount: optionThreeCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    \n    const onOption4 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionDCount: optionFourCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    useEffect(() => {\n        // let totalVotes = optionOneCount + optionTwoCount + optionThreeCount + optionFourCount;\n        // let votePercentageA = optionOneCount / totalVotes * 100;\n        // let votePercentageB = optionTwoCount / totalVotes * 100;\n        // let votePercentageC = optionThreeCount / totalVotes * 100;\n        // let votePercentageD = optionFourCount / totalVotes * 100;\n        // console.log(`${votePercentageA}% voted for Chenzo`);\n        // console.log(`${votePercentageB}% voted for Marky`);\n        // console.log(`${votePercentageC}% voted for Flax`);\n        // console.log(`${votePercentageD}% voted for Ally`);\n\n        onSnapshot(collection(db, \"polls\"), (snapshot) => {\n            snapshot.docs.map(doc => {\n                if(doc.id === params.id) {\n                    const data = doc.data();\n                    setTitle(data.title);\n                    setOptions(data.options);\n                    setPollingID(doc.id);\n                    setOptionOneCount(data.optionACount);\n                    setOptionTwoCount(data.optionBCount);\n                    setOptionThreeCount(data.optionCCount);\n                    setOptionFourCount(data.optionDCount);\n                }\n            });\n        });\n    }, []);\n\n\n    return (\n        <Suspense fallback={<div></div>}>\n            <div>\n                {!votingStatus ? (\n                    <div>\n                        <h1>{title}</h1>\n                        <button onClick={onOption1}>{options[0]}</button><br></br>\n                        <button onClick={onOption2}>{options[1]}</button><br></br>\n                        <button onClick={onOption3}>{options[2]}</button><br></br>\n                        <button onClick={onOption4}>{options[3]}</button><br></br>\n                    </div>\n                ) : (\n                    <PollResults pollID={pollingID} />\n                )}\n            </div>\n        </Suspense>\n    )\n}"]},"metadata":{},"sourceType":"module"}