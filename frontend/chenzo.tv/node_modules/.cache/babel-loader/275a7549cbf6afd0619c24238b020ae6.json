{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx\",\n    _s = $RefreshSig$();\n\nimport { collection, onSnapshot, doc, getDoc } from \"firebase/firestore\";\nimport { useParams } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function PollResults(_ref) {\n  _s();\n\n  let {\n    pollID\n  } = _ref;\n  let params = useParams();\n  let [title, setTitle] = useState('');\n  let [firstOptionValue, setFirstOptionValue] = useState(0);\n  let [secondOptionValue, setSecondOptionValue] = useState(0);\n  let [thirdOptionValue, setThirdOptionValue] = useState(0);\n  let [fourthOptionValue, setFourthOptionValue] = useState(0);\n  let [options, setOptions] = useState(['']);\n  let [results, setResults] = useState([0, 0, 0, 0]);\n  let [isLoading, setLoadingStatus] = useState(true);\n  useEffect(() => {\n    const firebaseInsert = async () => {\n      const checkRef = doc(db, 'polls', `${params.id}`);\n      const checkSnap = await getDoc(checkRef);\n    };\n\n    onSnapshot(collection(db, 'polls'), snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.id === pollID) {\n          const data = doc.data();\n          setFirstOptionValue(data.optionACount);\n          setSecondOptionValue(data.optionBCount);\n          setThirdOptionValue(data.optionCCount);\n          setFourthOptionValue(data.optionDCount);\n          setTitle(data.title);\n          setOptions(data.options);\n          setResults([data.optionACount, data.optionBCount, data.optionCCount, data.optionDCount]);\n          setTimeout(() => {\n            setLoadingStatus(false);\n          }, 1200);\n        }\n      });\n    });\n  }, [firstOptionValue || secondOptionValue || thirdOptionValue || fourthOptionValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: [options[0], options[1], options[2], options[3]],\n          datasets: [{\n            label: `# of Votes on ${title}`,\n            data: [firstOptionValue, secondOptionValue, thirdOptionValue, fourthOptionValue],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: '800',\n        width: '800'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PollResults, \"ON1WEtwlOPUPv2P1Z1K5744oGEg=\", false, function () {\n  return [useParams];\n});\n\n_c = PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx"],"names":["collection","onSnapshot","doc","getDoc","useParams","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","db","React","useEffect","useState","register","PollResults","pollID","params","title","setTitle","firstOptionValue","setFirstOptionValue","secondOptionValue","setSecondOptionValue","thirdOptionValue","setThirdOptionValue","fourthOptionValue","setFourthOptionValue","options","setOptions","results","setResults","isLoading","setLoadingStatus","firebaseInsert","checkRef","id","checkSnap","snapshot","docs","map","data","optionACount","optionBCount","optionCCount","optionDCount","setTimeout","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { collection, onSnapshot, doc, getDoc } from \"firebase/firestore\";\nimport { useParams } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\nexport default function PollResults({ pollID }) {\n\n    let params = useParams();\n    let [title, setTitle] = useState('');\n    let [firstOptionValue, setFirstOptionValue] = useState(0);\n    let [secondOptionValue, setSecondOptionValue] = useState(0);\n    let [thirdOptionValue, setThirdOptionValue] = useState(0);\n    let [fourthOptionValue, setFourthOptionValue] = useState(0);\n    let [options, setOptions] = useState(['']);\n    let [results, setResults] = useState([0, 0, 0, 0]);\n    let [isLoading, setLoadingStatus] = useState(true);\n\n    useEffect(() => {\n        const firebaseInsert = async () => {\n            const checkRef = doc(db, 'polls', `${params.id}`)\n            const checkSnap = await getDoc(checkRef);\n        };\n        onSnapshot(collection(db, 'polls'), (snapshot) => {\n            snapshot.docs.map((doc) => {\n                if(doc.id === pollID) {\n                    const data = doc.data();\n                    setFirstOptionValue(data.optionACount);\n                    setSecondOptionValue(data.optionBCount);\n                    setThirdOptionValue(data.optionCCount);\n                    setFourthOptionValue(data.optionDCount);\n                    setTitle(data.title);\n                    setOptions(data.options);\n                    setResults([data.optionACount, data.optionBCount, data.optionCCount, data.optionDCount]);\n                    setTimeout(() => { setLoadingStatus(false); }, 1200);\n                }\n            })\n        })\n    }, [firstOptionValue || secondOptionValue || thirdOptionValue || fourthOptionValue]);\n\n\n    \n    return (\n        <div>\n            <div className=\"\">\n                <h1>{title}</h1>\n                <Pie data={{\n                        labels: [options[0], options[1], options[2], options[3]],\n                        datasets: [\n                            {\n                                label: `# of Votes on ${title}`,\n                                data: [firstOptionValue, secondOptionValue, thirdOptionValue, fourthOptionValue],\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 0.2)',\n                                    'rgba(54, 162, 235, 0.2)',\n                                    'rgba(255, 206, 86, 0.2)',\n                                    'rgba(75, 192, 192, 0.2)',\n                                    'rgba(153, 102, 255, 0.2)',\n                                    'rgba(255, 159, 64, 0.2)',\n                                  ],\n                                  borderColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)',\n                                  ],\n                                  borderWidth: 1,\n                            },\n                        ]\n                    }}\n                    height={'800'}\n                    width={'800'}\n                    />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}