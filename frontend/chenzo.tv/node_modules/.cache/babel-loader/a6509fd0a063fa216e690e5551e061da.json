{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/Poll.tsx\",\n    _s = $RefreshSig$();\n\nimport { Suspense, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, doc, getDoc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport db from \"../../firebase/firestore\";\nimport PollResults from \"./PollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Poll() {\n  _s();\n\n  let params = useParams();\n  let [docStatus, setDocStatus] = useState(true);\n  let [title, setTitle] = useState('');\n  let [votingStatus, setVotingStatus] = useState(false);\n  let [pollingID, setPollingID] = useState('');\n  let [options, setOptions] = useState([]);\n  let [optionOneCount, setOptionOneCount] = useState(0);\n  let [optionTwoCount, setOptionTwoCount] = useState(0);\n  let [optionThreeCount, setOptionThreeCount] = useState(0);\n  let [optionFourCount, setOptionFourCount] = useState(0);\n\n  const onOption1 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionACount: optionOneCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onOption2 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionBCount: optionTwoCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onOption3 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionCCount: optionThreeCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onOption4 = async () => {\n    try {\n      let pollRef = doc(db, 'polls', pollingID);\n      await updateDoc(pollRef, {\n        optionDCount: optionFourCount + 1\n      });\n      setVotingStatus(true);\n      console.log(`Successfully updated ${pollRef.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    const firestoreInsert = async () => {\n      const checkRef = doc(db, 'polls', `${params.id}`);\n      const checkSnap = await getDoc(checkRef);\n\n      if (checkSnap.exists()) {\n        onSnapshot(collection(db, \"polls\"), snapshot => {\n          snapshot.docs.map(doc => {\n            console.log(doc.exists());\n\n            if (doc.id === params.id) {\n              const data = doc.data();\n              setTitle(data.title);\n              setOptions(data.options);\n              setPollingID(doc.id);\n              setOptionOneCount(data.optionACount);\n              setOptionTwoCount(data.optionBCount);\n              setOptionThreeCount(data.optionCCount);\n              setOptionFourCount(data.optionDCount);\n            }\n          });\n        });\n      } else setDocStatus(false);\n    };\n\n    firestoreInsert();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: docStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !votingStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onOption1,\n            children: options[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onOption2,\n            children: options[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onOption3,\n            children: options[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onOption4,\n            children: options[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 90\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(PollResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This document does not exist!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"48g0hmCPiPJ/33CMwOMSonr+97s=\", false, function () {\n  return [useParams];\n});\n\n_c = Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/Poll.tsx"],"names":["Suspense","useEffect","useState","useParams","collection","doc","getDoc","onSnapshot","updateDoc","db","PollResults","Poll","params","docStatus","setDocStatus","title","setTitle","votingStatus","setVotingStatus","pollingID","setPollingID","options","setOptions","optionOneCount","setOptionOneCount","optionTwoCount","setOptionTwoCount","optionThreeCount","setOptionThreeCount","optionFourCount","setOptionFourCount","onOption1","pollRef","optionACount","console","log","id","e","onOption2","optionBCount","onOption3","optionCCount","onOption4","optionDCount","firestoreInsert","checkRef","checkSnap","exists","snapshot","docs","map","data"],"mappings":"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","sourcesContent":["import react, { Suspense, useEffect, useState, } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { collection, doc, getDoc, getDocs, onSnapshot, setDoc, updateDoc } from \"firebase/firestore\";\nimport db from \"../../firebase/firestore\";\nimport PollResults from \"./PollResults\";\n\nexport default function Poll() {\n    \n    let params = useParams();\n    let [docStatus, setDocStatus] = useState(true);\n    let [title, setTitle] = useState('');\n    let [votingStatus, setVotingStatus] = useState(false);\n    let [pollingID, setPollingID] = useState('');\n    let [options, setOptions] = useState([]);\n    let [optionOneCount, setOptionOneCount] = useState(0);\n    let [optionTwoCount, setOptionTwoCount] = useState(0);\n    let [optionThreeCount, setOptionThreeCount] = useState(0);\n    let [optionFourCount, setOptionFourCount] = useState(0);\n\n    const onOption1 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionACount: optionOneCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    \n    const onOption2 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionBCount: optionTwoCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    \n    const onOption3 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionCCount: optionThreeCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    \n    const onOption4 = async () => {\n        try {\n            let pollRef = doc(db, 'polls', pollingID);\n            await updateDoc(pollRef, {\n                optionDCount: optionFourCount + 1\n            })\n            setVotingStatus(true);\n            console.log(`Successfully updated ${pollRef.id}`);\n        } catch(e) { console.log(e); }\n    };\n\n    useEffect(() => {\n        const firestoreInsert = async () => {\n            const checkRef = doc(db, 'polls', `${params.id}`)\n            const checkSnap = await getDoc(checkRef);\n            if(checkSnap.exists()) {\n                onSnapshot(collection(db, \"polls\"), (snapshot) => {\n                    snapshot.docs.map(doc => {\n                        console.log(doc.exists());\n                        if(doc.id === params.id) {\n                            const data = doc.data();\n                            setTitle(data.title);\n                            setOptions(data.options);\n                            setPollingID(doc.id);\n                            setOptionOneCount(data.optionACount);\n                            setOptionTwoCount(data.optionBCount);\n                            setOptionThreeCount(data.optionCCount);\n                            setOptionFourCount(data.optionDCount);\n                        }\n                    });\n                });\n            } else setDocStatus(false);\n        };\n        firestoreInsert();\n    }, []);\n\n\n    return (\n        <Suspense fallback={<div></div>}>\n            <div>\n                {docStatus ? (\n                                <div>\n                                    {!votingStatus ? (\n                                    <div>\n                                        <h1>{title}</h1>\n                                        <button onClick={onOption1}>{options[0]}</button><br></br>\n                                        <button onClick={onOption2}>{options[1]}</button><br></br>\n                                        <button onClick={onOption3}>{options[2]}</button><br></br>\n                                        <button onClick={onOption4}>{options[3]}</button><br></br>\n                                    </div>\n                                    ) : (\n                                    <PollResults />\n                                    )}\n                                </div>\n                          ) : (       \n                        <div>\n                            <h1>This document does not exist!</h1>\n                        </div>\n                    )}\n                </div>\n        </Suspense>\n    )\n}"]},"metadata":{},"sourceType":"module"}