{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Documents\\\\Programming\\\\Chenzo.tv\\\\frontend\\\\chenzo.tv\\\\src\\\\components\\\\Poll\\\\PollResults.tsx\",\n    _s = $RefreshSig$();\n\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { PieChart, Pie } from \"recharts\";\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollResults(_ref) {\n  _s();\n\n  let {\n    pollID\n  } = _ref;\n  let [title, setTitle] = useState('');\n  let [options, setOptions] = useState(['']);\n  let [results, setResults] = useState([0]);\n  let [isLoading, setLoadingStatus] = useState(true);\n  useEffect(() => {\n    onSnapshot(collection(db, 'polls'), snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.id === pollID) {\n          const data = doc.data();\n          let totalVotes = data.optionACount + data.optionBCount + data.optionCCount + data.optionDCount;\n          let votePercentageACalc = data.optionACount / totalVotes * 100;\n          let votePercentageBCalc = data.optionBCount / totalVotes * 100;\n          let votePercentageCCalc = data.optionCCount / totalVotes * 100;\n          let votePercentageDCalc = data.optionDCount / totalVotes * 100;\n          const results = [votePercentageACalc, votePercentageBCalc, votePercentageCCalc, votePercentageDCalc];\n          setTitle(data.title);\n          setOptions(data.options);\n          console.log(data.options);\n          setResults(results);\n          setTimeout(() => {\n            setLoadingStatus(false);\n          }, 1200);\n        }\n      });\n    });\n  }, [results]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 500,\n        height: 250,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: data01,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          cx: \"50%\",\n          cy: \"50%\",\n          innerRadius: 60,\n          outerRadius: 80,\n          fill: \"#82ca9d\",\n          label: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PollResults, \"p31APXXNmA/Rg/vYtYD0B5ANWH8=\");\n\n_c = PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["C:/Users/Elias/Documents/Programming/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx"],"names":["collection","onSnapshot","PieChart","Pie","db","React","useEffect","useState","PollResults","pollID","title","setTitle","options","setOptions","results","setResults","isLoading","setLoadingStatus","snapshot","docs","map","doc","id","data","totalVotes","optionACount","optionBCount","optionCCount","optionDCount","votePercentageACalc","votePercentageBCalc","votePercentageCCalc","votePercentageDCalc","console","log","setTimeout","data01"],"mappings":"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","sourcesContent":["import { collection, onSnapshot } from \"firebase/firestore\";\r\nimport { PieChart, Pie } from \"recharts\";\r\nimport db from \"../../firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './PollResults.css';\r\n\r\n\r\n\r\nexport default function PollResults({ pollID }) {\r\n\r\n    let [title, setTitle] = useState('');\r\n    let [options, setOptions] = useState(['']);\r\n    let [results, setResults] = useState([0]);\r\n    let [isLoading, setLoadingStatus] = useState(true);\r\n\r\n    useEffect(() => {\r\n        onSnapshot(collection(db, 'polls'), (snapshot) => {\r\n            snapshot.docs.map((doc) => {\r\n                if(doc.id === pollID) {\r\n                    const data = doc.data();\r\n                    let totalVotes = data.optionACount + data.optionBCount + data.optionCCount + data.optionDCount;\r\n                    let votePercentageACalc = data.optionACount / totalVotes * 100;\r\n                    let votePercentageBCalc = data.optionBCount / totalVotes * 100;\r\n                    let votePercentageCCalc = data.optionCCount / totalVotes * 100;\r\n                    let votePercentageDCalc = data.optionDCount / totalVotes * 100;\r\n               \r\n                    const results = [votePercentageACalc, votePercentageBCalc, votePercentageCCalc, votePercentageDCalc];\r\n                    setTitle(data.title);\r\n                    setOptions(data.options);\r\n                    console.log(data.options);\r\n                    setResults(results);\r\n                    setTimeout(() => { setLoadingStatus(false); }, 1200);\r\n                }\r\n            })\r\n        })\r\n    }, [results]);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <PieChart width={500} height={250}>\r\n                        <Pie data={data01} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#82ca9d\" label />\r\n                    </PieChart>\r\n                </div>\r\n            ) : (\r\n                <h1>Loading!</h1>\r\n            )}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}