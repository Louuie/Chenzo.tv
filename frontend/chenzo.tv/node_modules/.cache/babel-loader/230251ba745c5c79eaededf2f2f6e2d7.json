{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx\",\n    _s = $RefreshSig$();\n\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function PollResults(_ref) {\n  _s();\n\n  let {\n    pollID\n  } = _ref;\n  let [title, setTitle] = useState('');\n  let [firstOptionValue, setFirstOptionValue] = useState(0);\n  let [secondOptionValue, setSecondOptionValue] = useState(0);\n  let [thirdOptionValue, setThirdOptionValue] = useState(0);\n  let [fourthOptionValue, setFourthOptionValue] = useState(0);\n  let [options, setOptions] = useState(['']);\n  let [results, setResults] = useState([0, 0, 0, 0]);\n  let [isLoading, setLoadingStatus] = useState(true);\n  const values = [10, 20, 30, 40];\n  useEffect(() => {\n    onSnapshot(collection(db, 'polls'), snapshot => {\n      snapshot.docs.map(doc => {\n        if (doc.id === pollID) {\n          const data = doc.data();\n          let totalVotes = data.optionACount + data.optionBCount + data.optionCCount + data.optionDCount;\n          setFirstOptionValue(data.optionACount);\n          setSecondOptionValue(data.optionBCount);\n          setThirdOptionValue(data.optionCCount);\n          setFourthOptionValue(data.optionDCount);\n          setTitle(data.title);\n          setOptions(data.options);\n          setResults([data.optionACount, data.optionBCount, data.optionCCount, data.optionDCount]);\n          setTimeout(() => {\n            setLoadingStatus(false);\n          }, 1200);\n        }\n      });\n    });\n  }, [results]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: ['Red', 'Blue', 'Green', 'Purple'],\n          datasets: [{\n            label: `# of Votes on ${title}`,\n            data: [firstOptionValue, secondOptionValue, thirdOptionValue, fourthOptionValue],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PollResults, \"6zz3RMASo5zIK7/nzPU1v33gP+A=\");\n\n_c = PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx"],"names":["collection","onSnapshot","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","db","React","useEffect","useState","register","PollResults","pollID","title","setTitle","firstOptionValue","setFirstOptionValue","secondOptionValue","setSecondOptionValue","thirdOptionValue","setThirdOptionValue","fourthOptionValue","setFourthOptionValue","options","setOptions","results","setResults","isLoading","setLoadingStatus","values","snapshot","docs","map","doc","id","data","totalVotes","optionACount","optionBCount","optionCCount","optionDCount","setTimeout","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { collection, onSnapshot } from \"firebase/firestore\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\nexport default function PollResults({ pollID }) {\n\n    let [title, setTitle] = useState('');\n    let [firstOptionValue, setFirstOptionValue] = useState(0);\n    let [secondOptionValue, setSecondOptionValue] = useState(0);\n    let [thirdOptionValue, setThirdOptionValue] = useState(0);\n    let [fourthOptionValue, setFourthOptionValue] = useState(0);\n    let [options, setOptions] = useState(['']);\n    let [results, setResults] = useState([0, 0, 0, 0]);\n    let [isLoading, setLoadingStatus] = useState(true);\n    const values = [10, 20, 30, 40]\n\n    useEffect(() => {\n        onSnapshot(collection(db, 'polls'), (snapshot) => {\n            snapshot.docs.map((doc) => {\n                if(doc.id === pollID) {\n                    const data = doc.data();\n                    let totalVotes = data.optionACount + data.optionBCount + data.optionCCount + data.optionDCount;\n                    setFirstOptionValue(data.optionACount);\n                    setSecondOptionValue(data.optionBCount);\n                    setThirdOptionValue(data.optionCCount);\n                    setFourthOptionValue(data.optionDCount);\n                    setTitle(data.title);\n                    setOptions(data.options);\n                    setResults([data.optionACount, data.optionBCount, data.optionCCount, data.optionDCount]);\n                    setTimeout(() => { setLoadingStatus(false); }, 1200);\n                }\n            })\n        })\n    }, [results]);\n\n\n    \n    return (\n        <div>\n            {!isLoading ? (\n                <div>\n                    <h1>{title}</h1>\n                    <Pie data={{\n                        labels: ['Red', 'Blue', 'Green', 'Purple'],\n                        datasets: [\n                            {\n                                label: `# of Votes on ${title}`,\n                                data: [firstOptionValue, secondOptionValue, thirdOptionValue, fourthOptionValue],\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 0.2)',\n                                    'rgba(54, 162, 235, 0.2)',\n                                    'rgba(255, 206, 86, 0.2)',\n                                    'rgba(75, 192, 192, 0.2)',\n                                    'rgba(153, 102, 255, 0.2)',\n                                    'rgba(255, 159, 64, 0.2)',\n                                  ],\n                                  borderColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)',\n                                  ],\n                                  borderWidth: 1,\n                            },\n                        ]\n                    }}/>\n                </div>\n            ) : (\n                <h1>Loading!</h1>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}