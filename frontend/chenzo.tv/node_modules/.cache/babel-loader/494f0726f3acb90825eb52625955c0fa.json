{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx\",\n    _s = $RefreshSig$();\n\nimport { collection, onSnapshot, doc, getDoc } from \"firebase/firestore\";\nimport { useParams } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function PollResults() {\n  _s();\n\n  let params = useParams();\n  let [title, setTitle] = useState('');\n  let [docExists, setDocExists] = useState(true);\n  let [firstOptionValue, setFirstOptionValue] = useState(0);\n  let [secondOptionValue, setSecondOptionValue] = useState(0);\n  let [thirdOptionValue, setThirdOptionValue] = useState(0);\n  let [fourthOptionValue, setFourthOptionValue] = useState(0);\n  let [options, setOptions] = useState(['']);\n  let [results, setResults] = useState([0, 0, 0, 0]);\n  let [isLoading, setLoadingStatus] = useState(true);\n  useEffect(() => {\n    const firebaseInsert = async () => {\n      const checkRef = doc(db, 'polls', `${params.id}`);\n      const checkSnap = await getDoc(checkRef);\n\n      if (checkSnap.exists()) {\n        onSnapshot(collection(db, 'polls'), snapshot => {\n          snapshot.docs.map(doc => {\n            if (doc.id === checkSnap.id) {\n              const data = doc.data();\n              setFirstOptionValue(data.optionACount);\n              setSecondOptionValue(data.optionBCount);\n              setThirdOptionValue(data.optionCCount);\n              setFourthOptionValue(data.optionDCount);\n              setTitle(data.title);\n              setOptions(data.options);\n              setResults([data.optionACount, data.optionBCount, data.optionCCount, data.optionDCount]);\n              setTimeout(() => {\n                setLoadingStatus(false);\n              }, 1200);\n            }\n          });\n        });\n      } else setDocExists(false);\n    };\n\n    firebaseInsert();\n  }, [firstOptionValue || secondOptionValue || thirdOptionValue || fourthOptionValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: docExists ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: {\n            labels: [options[0], options[1], options[2], options[3]],\n            datasets: [{\n              label: `# of Votes on ${title}`,\n              data: [firstOptionValue, secondOptionValue, thirdOptionValue, fourthOptionValue],\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 1\n            }]\n          },\n          height: '400',\n          width: '400'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This Document does not exist!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PollResults, \"6gQmy56pu+l4P3rKjC/nlQYIVGA=\", false, function () {\n  return [useParams];\n});\n\n_c = PollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"sources":["/Users/elias/Desktop/Chenzo.tv/frontend/chenzo.tv/src/components/Poll/PollResults.tsx"],"names":["collection","onSnapshot","doc","getDoc","useParams","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","db","React","useEffect","useState","register","PollResults","params","title","setTitle","docExists","setDocExists","firstOptionValue","setFirstOptionValue","secondOptionValue","setSecondOptionValue","thirdOptionValue","setThirdOptionValue","fourthOptionValue","setFourthOptionValue","options","setOptions","results","setResults","isLoading","setLoadingStatus","firebaseInsert","checkRef","id","checkSnap","exists","snapshot","docs","map","data","optionACount","optionBCount","optionCCount","optionDCount","setTimeout","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { collection, onSnapshot, doc, getDoc } from \"firebase/firestore\";\nimport { useParams } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport db from \"../../firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport './PollResults.css';\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\nexport default function PollResults() {\n\n    let params = useParams();\n    let [title, setTitle] = useState('');\n    let [docExists, setDocExists] = useState(true);\n    let [firstOptionValue, setFirstOptionValue] = useState(0);\n    let [secondOptionValue, setSecondOptionValue] = useState(0);\n    let [thirdOptionValue, setThirdOptionValue] = useState(0);\n    let [fourthOptionValue, setFourthOptionValue] = useState(0);\n    let [options, setOptions] = useState(['']);\n    let [results, setResults] = useState([0, 0, 0, 0]);\n    let [isLoading, setLoadingStatus] = useState(true);\n\n    useEffect(() => {\n        const firebaseInsert = async () => {\n            const checkRef = doc(db, 'polls', `${params.id}`)\n            const checkSnap = await getDoc(checkRef);\n            if(checkSnap.exists()) {\n                onSnapshot(collection(db, 'polls'), (snapshot) => {\n                    snapshot.docs.map((doc) => {\n                        if(doc.id === checkSnap.id) {\n                            const data = doc.data();\n                            setFirstOptionValue(data.optionACount);\n                            setSecondOptionValue(data.optionBCount);\n                            setThirdOptionValue(data.optionCCount);\n                            setFourthOptionValue(data.optionDCount);\n                            setTitle(data.title);\n                            setOptions(data.options);\n                            setResults([data.optionACount, data.optionBCount, data.optionCCount, data.optionDCount]);\n                            setTimeout(() => { setLoadingStatus(false); }, 1200);\n                        }\n                    });\n                });\n            } else setDocExists(false);\n        };\n        firebaseInsert();\n    }, [firstOptionValue || secondOptionValue || thirdOptionValue || fourthOptionValue]);\n\n\n    \n    return (\n        <div>\n            <div>\n                {docExists ? (\n                    <div>\n                        <h1>{title}</h1>\n                        <Pie data={{\n                        labels: [options[0], options[1], options[2], options[3]],\n                        datasets: [\n                            {\n                                label: `# of Votes on ${title}`,\n                                data: [firstOptionValue, secondOptionValue, thirdOptionValue, fourthOptionValue],\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 0.2)',\n                                    'rgba(54, 162, 235, 0.2)',\n                                    'rgba(255, 206, 86, 0.2)',\n                                    'rgba(75, 192, 192, 0.2)',\n                                    'rgba(153, 102, 255, 0.2)',\n                                    'rgba(255, 159, 64, 0.2)',\n                                  ],\n                                  borderColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)',\n                                  ],\n                                  borderWidth: 1,\n                            },\n                        ]\n                    }} height={'400'} width={'400'} />\n                    </div>\n                ) : (\n                    <div>\n                        <h1>This Document does not exist!</h1>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}